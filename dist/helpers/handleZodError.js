"use strict";
/**
 * Handles Zod validation errors. This function processes an error object
 * generated by a Zod schema validation and returns a standardized error
 * response.
 *
 * @param {any} err - The error object from a Zod validation process.
 * @returns {TGenericErrorResponse} A generic error response object with a 400
 * status code, a message indicating a Zod error, and an array of error sources.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.handleZodError = void 0;
const handleZodError = (err) => {
    const errorSources = [];
    err.issues.forEach((issue) => {
        errorSources.push({
            path: issue.path[issue.path.length - 1],
            message: issue.message
        });
    });
    return {
        statusCode: 400,
        message: 'Zod Error',
        errorSources
    };
};
exports.handleZodError = handleZodError;
